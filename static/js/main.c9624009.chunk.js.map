{"version":3,"sources":["components/background.tsx","components/clock.tsx","components/weather.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["background","props","componentDidMount","setInterval","setState","image","getImageForHour","Date","getHours","intervalSeconds","state","hour","className","this","Component","Clock","datetime","updateInterval","render","date","format","process","REACT_APP_LOCATION_LAT","REACT_APP_LOCATION_LON","REACT_APP_WEATHER_API_KEY","requestUrl","Weather","a","fetch","then","response","json","currentTemp","Math","round","current","temp","feelsLike","feels_like","loading","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9624009.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\ninterface IProps { }\r\ninterface IState {\r\n    image: string\r\n}\r\n\r\nconst intervalSeconds = 60;\r\n\r\nexport class background extends Component<IProps, IState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = { image: this.getImageForHour(new Date().getHours()) };\r\n    }\r\n\r\n    getImageForHour(hour:number){\r\n        switch (true) {\r\n            case (hour >= 23 && hour <= 4):\r\n                return 'late-night';\r\n            case (hour >= 22):\r\n                return 'mid-night';\r\n            case (hour >= 21):\r\n                return 'early-night';\r\n            case (hour >= 19):\r\n                return 'late-evening';\r\n            case (hour >= 16):\r\n                return 'mid-evening';\r\n            case (hour >= 15):\r\n                return 'early-evening';\r\n            case (hour >= 13):\r\n                return 'late-afternoon';\r\n            case (hour >= 12):\r\n                return 'mid-afternoon';\r\n            case (hour >= 10):\r\n                return 'early-afternoon';\r\n            case (hour >= 7):\r\n                return 'late-morning';\r\n            case (hour >= 5):\r\n                return 'mid-morning'; \r\n            default:\r\n                return 'early-morning';\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => setInterval(() => {\r\n        this.setState({ image: this.getImageForHour(new Date().getHours()) })\r\n    }, intervalSeconds * 1000);\r\n\r\n    render() {\r\n        return (\r\n            <div className={`background ${this.state.image}`}></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default background\r\n","import React, { Component } from 'react'\r\nimport Moment from 'react-moment';\r\ninterface IProps {}\r\ninterface IState {\r\n    datetime : Date\r\n}\r\n\r\nconst updateInterval = 1;\r\n\r\nexport default class Clock extends Component<IProps, IState> {\r\n    constructor(props: IProps){\r\n        super(props);\r\n        this.state = {\r\n            datetime: new Date()\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => setInterval(() => {\r\n        this.setState({ datetime: new Date() })\r\n    }, updateInterval * 1000);\r\n\r\n    render = () => {\r\n        return (\r\n           <div className='fit-content border-bottom'>\r\n                <Moment date={this.state.datetime} format='dddd, Do MMMM yyyy' className='medium bright'/>\r\n                <div>\r\n                    <Moment className='large bright' date={this.state.datetime} format='HH:mm'/>\r\n                    <span className=\"text-fade\">\r\n                        <Moment className='medium normal align-top' date={this.state.datetime} format='ss'/>\r\n                    </span>\r\n                </div>\r\n           </div>\r\n        );\r\n    }\r\n}\r\n","import { Component } from \"react\";\r\ninterface IProps { }\r\ninterface IState {\r\n    loading: Boolean,\r\n    currentTemp?: Number,\r\n    feelsLike?: Number\r\n}\r\n\r\nconst { \r\n    REACT_APP_LOCATION_LAT, \r\n    REACT_APP_LOCATION_LON,\r\n    REACT_APP_WEATHER_API_KEY\r\n} = process.env;\r\n\r\nconst requestUrl = 'https://api.openweathermap.org/data/2.5/onecall?'\r\n    + `lat=${REACT_APP_LOCATION_LAT}`\r\n    + `&lon=${REACT_APP_LOCATION_LON}`\r\n    + `&appid=${REACT_APP_WEATHER_API_KEY}`\r\n    + `&exclude=\"current,minutely,hourly,alerts`\r\n    + `&units=metric`\r\n;\r\n\r\nexport default class Weather extends Component<IProps, IState>{\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        await fetch(requestUrl)\r\n        .then(response => response.json())\r\n        .then(json => this.setState({ \r\n            currentTemp: Math.round(json.current.temp * 10) / 10,\r\n            feelsLike: Math.round(json.current.feels_like * 10) / 10,\r\n            loading: false \r\n        }));\r\n    }\r\n\r\n    render = () => {\r\n        if (this.state.loading) {\r\n            return (\r\n                <div>Loading</div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <div className=\"medium bright\">Edinburgh, GB</div>\r\n                    <div className=\"large bright\">{this.state.currentTemp}°C</div>\r\n                    <div className=\"small\">Feels like {this.state.feelsLike}°C</div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}","import React from 'react';\nimport Background from './components/background';\nimport Clock from './components/clock';\nimport Weather from './components/weather';\nimport './App.css';\nimport './fonts/roboto.css';\n\nfunction App() {\n  return (\n    <div>\n      <Background/>\n      <Clock/>\n      <Weather/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}